type Query {
    movies(page: Int, size: Int): MovieConnection!
    movie(id: ID!): Movie
    tvShows(page: Int, size: Int): TvShowConnection!
    tvShow(id: ID!): TvShow
}

type Mutation {
    createMovie(input: MovieInput!): Movie!
    updateMovie(id: ID!, input: MovieInput!): Movie!
    deleteMovie(id: ID!): Boolean!

    createTvShow(input: TvShowInput!): TvShow!
    updateTvShow(id: ID!, input: TvShowInput!): TvShow!
    deleteTvShow(id: ID!): Boolean!
}

type Movie {
    id: ID!
    title: String!
    description: String
    releaseYear: Int
    director: String
    genres: [String!]!
    rating: Float
    duration: String
    imageUrl: String
}

type TvShow {
    id: ID!
    title: String!
    description: String
    firstAirYear: Int
    creator: String
    genres: [String!]!
    rating: Float
    numberOfSeasons: Int
    imageUrl: String
}

input MovieInput {
    title: String!
    description: String
    releaseYear: Int
    director: String
    genres: [String!]!
    duration: String
    imageUrl: String
}

input TvShowInput {
    title: String!
    description: String
    firstAirYear: Int
    creator: String
    genres: [String!]!
    numberOfSeasons: Int
    imageUrl: String
}

type MovieConnection {
    content: [Movie!]!
    totalElements: Int!
    totalPages: Int!
    size: Int!
    number: Int!
}

type TvShowConnection {
    content: [TvShow!]!
    totalElements: Int!
    totalPages: Int!
    size: Int!
    number: Int!
}