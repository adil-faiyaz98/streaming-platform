scalar DateTime

type Query {
  # Hello query
  hello: String!

  # Movies
  movie(id: ID!): Movie
  movies: [Movie!]!
  searchMovies(title: String!): [Movie!]!
  moviesByGenre(genre: String!): [Movie!]!
  topRatedMovies: [Movie!]!
  featuredMovies: [Movie!]!
  moviesPage(page: Int, size: Int): MoviePage!

  # SeriesController
  series(id: ID!): SeriesDTO
  allSeries: [SeriesDTO!]!
  searchSeries(title: String!): [SeriesDTO!]!
  seriesByGenre(genre: String!): [SeriesDTO!]!
  topRatedSeries: [SeriesDTO!]!
  featuredSeries: [SeriesDTO!]!
  seriesPage(page: Int, size: Int): SeriesPage!

  # Seasons
  season(id: ID!): SeasonDTO
  seasons(seriesId: ID!): [SeasonDTO!]!
  seasonByNumber(seriesId: ID!, seasonNumber: Int!): SeasonDTO

  # Episodes
  episode(id: ID!): EpisodeDTO
  episodes(seasonId: ID!): [EpisodeDTO!]!
}

type Mutation {
  # Movies
  createMovie(input: MovieInput!): Movie!
  updateMovie(id: ID!, input: MovieInput!): Movie!
  deleteMovie(id: ID!): Boolean!

  # SeriesController
  createSeries(input: SeriesInput!): SeriesDTO!
  updateSeries(id: ID!, input: SeriesInput!): SeriesDTO!
  deleteSeries(id: ID!): Boolean!

  # Seasons
  createSeason(seriesId: ID!, input: SeasonInput!): SeasonDTO!
  updateSeason(id: ID!, input: SeasonInput!): SeasonDTO!
  deleteSeason(id: ID!): Boolean!

  # Episodes
  createEpisode(seasonId: ID!, input: EpisodeInput!): EpisodeDTO!
  updateEpisode(id: ID!, input: EpisodeInput!): EpisodeDTO!
  deleteEpisode(id: ID!): Boolean!
}

type Movie {
  id: ID!
  title: String!
  description: String
  releaseYear: Int
  director: String
  duration: Int
  maturityRating: String
  imageUrl: String
  videoUrl: String
  averageRating: Float
  viewCount: Int
  featured: Boolean
  genres: [String!]
  createdAt: DateTime
  updatedAt: DateTime
}

input MovieInput {
  title: String!
  description: String
  releaseYear: Int
  director: String
  duration: Int
  maturityRating: String
  imageUrl: String
  videoUrl: String
  featured: Boolean
  genres: [String!]
}

type MoviePage {
  content: [Movie!]!
  totalElements: Int!
  totalPages: Int!
}

# Changed from Series to SeriesDTO to match implementation
type SeriesDTO {
  id: ID!
  title: String!
  description: String
  startYear: Int
  endYear: Int
  maturityRating: String
  imageUrl: String
  averageRating: Float
  viewCount: Int
  featured: Boolean
  genres: [String!]
  seasons: [SeasonDTO!]
  createdAt: DateTime
  updatedAt: DateTime
}

input SeriesInput {
  title: String!
  description: String
  startYear: Int
  endYear: Int
  maturityRating: String
  imageUrl: String
  featured: Boolean
  genres: [String!]
}

type SeriesPage {
  content: [SeriesDTO!]!
  totalElements: Int!
  totalPages: Int!
}

# Changed from Season to SeasonDTO
type SeasonDTO {
  id: ID!
  series: SeriesDTO
  seasonNumber: Int!
  title: String
  description: String
  imageUrl: String
  episodes: [EpisodeDTO!]
  releaseYear: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input SeasonInput {
  seasonNumber: Int!
  title: String
  description: String
  imageUrl: String
  releaseYear: Int
}

# Changed from Episode to EpisodeDTO
type EpisodeDTO {
  id: ID!
  season: SeasonDTO
  episodeNumber: Int!
  title: String!
  description: String
  duration: Int
  imageUrl: String
  videoUrl: String
  createdAt: DateTime
  updatedAt: DateTime
}

input EpisodeInput {
  episodeNumber: Int!
  title: String!
  description: String
  duration: Int
  imageUrl: String
  videoUrl: String
}