services:
  postgres:
    image: postgres:16-alpine
    container_name: streaming-postgres
    environment:
      POSTGRES_DB: streaming_platform_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

  catalog-service:
    build:
      context: .
      dockerfile: streaming-catalog-service/Dockerfile
    container_name: streaming-catalog-service
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8082:8082"
    networks:
      - app-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/streaming_platform_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
